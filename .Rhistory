# read in the 2.5 arc sec data for solar radiation and wind speed
bioNames <- read_csv("~/trueNAS/work/cwr_wildgrapes/data/geospatial_datasets/bioclim_layers/variableNames.csv")
###
# primary script for the rendering of ecogeographic charactersation of lactuca data
# carverd@colostate.edu
# 20220810
###
pacman::p_load("terra", "sf", "dplyr", "readr", "stringr","raster", "ggplot2",
"googlesheets4","googledrive", "tmap", "geodata", "rnaturalearth", "leaflet",
"tidyr","FactoMineR","factoextra")
# source functions --------------------------------------------------------
source("src/dms_dd.R")
# authorize account
googlesheets4::gs4_auth(email = "carver.dan1@gmail.com")
# set tmap mode to interactive map
tmap_mode("view")
# 2024 data generation ----------------------------------------------------
# original Data
d1 <- read.csv("originalData/originalLactucaData.csv")
View(d1)
# read in processed data  -------------------------------------------------
data1 <- read_csv("outputs/ecogeographicDescription.csv")
View(data1)
###
# primary script for the rendering of ecogeographic charactersation of lactuca data
# carverd@colostate.edu
# 20220810
###
pacman::p_load("terra", "sf", "dplyr", "readr", "stringr","raster", "ggplot2",
"googlesheets4","googledrive", "tmap", "geodata", "rnaturalearth", "leaflet",
"tidyr","FactoMineR","factoextra")
# source functions --------------------------------------------------------
source("src/dms_dd.R")
# authorize account
googlesheets4::gs4_auth(email = "carver.dan1@gmail.com")
# set tmap mode to interactive map
tmap_mode("view")
# read in the 2.5 arc sec data for solar radiation and wind speed
bioNames <- read_csv("~/trueNAS/work/cwr_wildgrapes/data/geospatial_datasets/bioclim_layers/variableNames.csv")
bioVars <- readRDS("~/trueNAS/work/cwr_wildgrapes/data/geospatial_datasets/bioclim_layers/bioclim_2.5arcsec_terra.RDS")
names(bioVars) <- bioNames$`Current title`
names(bioVars) <- bioNames$full_title
# sub set for the layer not present at higher resolution
bioVarsTrim <- bioVars[[20:22]]
rm(bioVars)
# 2024 data generation ----------------------------------------------------
# original Data
names(bioVars)
bioVarsTrim
names(bioVarsTrim)
# read in the 2.5 arc sec data for solar radiation and wind speed
bioNames <- read_csv("~/trueNAS/work/cwr_wildgrapes/data/geospatial_datasets/bioclim_layers/variableNames.csv")
bioNames
d
### view the outputs
wc <- terra::rast("downloads/climate/wc2.1_tiles/tile_52_wc2.1_30s_bio.tif")
wc
plot(wc[[1]])
elev <- terra::rast("downloads/TRUE/ARG_elv_msk.tif") |>
terra::crop(terra::ext(wc))
sp1
# set the path
## does some automatic file detection testing with is nice
geodata_path("downloads")
### grab elevation data outside of the loop as it is by country
geodata::elevation_30s(country = "AR")
## copy to compare the selection against
sp2 <- sp1 |>
dplyr::select("Id","species","location","latitude","longitude","altitude") |>
terra::vect()
# 2024 data generation ----------------------------------------------------
# original Data
d1 <- read.csv("originalData/originalLactucaData.csv")
d1$Lactuca.species.at.coll..site[1] <- "Lvir"
# convert the decimal degree
d2 <- d1 |>
dplyr::filter(!is.na(latitude))|>
dms_dd(colname = "latitude")|>
dms_dd(colname = "longitude") |>
dplyr::select(
Id = "Coll..site.for.map",
species = "Lactuca.species.at.coll..site",
location = "place..location",
"latitude",
"longitude",
altitude = "altitude..m.a.s.l.."
)
d2
## Spatial object
### drop the new addition
sp1 <- d2 |>
sf::st_as_sf(coords = c("longitude","latitude"), remove = FALSE)
## copy to compare the selection against
sp2 <- sp1 |>
dplyr::select("Id","species","location","latitude","longitude","altitude") |>
terra::vect()
sp1
nrow(sp1)
### try downloading tiles.
val <- sp1[i,]
### try downloading tiles.
val <- sp1[1,]
# grab lat lon
lat <- val$latitude[1] |> unlist()
lon <- val$longitude[1] |> unlist()
lat
lonm
lon
# grab bioclim
geodata::worldclim_tile(var = "bio",res = "0.5", lon = lon, lat = lat )
?worldclim_tile
# grab bioclim
geodata::worldclim_tile(var = "bio",res = "0.5", lon = lon, lat = lat )
### view the outputs
wc <- terra::rast("downloads/climate/wc2.1_tiles/tile_52_wc2.1_30s_bio.tif")
wc
plot(wc[[1]])
elev <- terra::rast("downloads/TRUE/ARG_elv_msk.tif") |>
terra::crop(terra::ext(wc))
elev <- terra::rast("downloads/elevation/ARG_elv_msk.tif") |>
terra::crop(terra::ext(wc))
plot(elev)
# slope
slope <- terra::terrain(elev, v= "slope", unit = "degrees" , neighbors = 8)
# aspect
aspect <- terra::terrain(elev, v= "aspect", unit = "degrees" , neighbors = 8)
# mask the plot area
wc2 <- wc |>
terra::crop(y = slope)
allFeatures <- c(wc2,elev, slope, aspect)
allFeatures
names(allFeatures)
# Extract values to points  -----------------------------------------------
exVal1 <- terra::extract(x = allFeatures, y = sp2)
exVal1
bioNames$shortName[1:19]
names(exVal1) <- c("Id",bioNames$shortName[1:19], "elevation", "slope", "aspect")
exVal1
# exVal2 <- terra::extract(x = bioVarsTrim, y = sp2)
# join and re order
exVals <- dplyr::left_join(as.data.frame(sp1), exVal1, by = "Id")
exVals
# subset for only require data for box plots
exVals2 <- exVals |>
dplyr::select(
"Id",
"species",
"location",
"latitude",
"longitude",
"Annual mean temperature (\u00B0C)" = "bio_01",
"Mean diurnal temperature range (\u00B0C)" = "bio_02",
"Isothermality" = "bio_03",
"Temperature seasonality (standard deviation) (\u00B0C)" = "bio_04"   ,
"Maximum temperature of warmest month (\u00B0C)" = "bio_05",
"Minimum temperature of coldest month (\u00B0C)" = "bio_06",
"Temperature annual range (\u00B0C)" = "bio_07",
"Mean temperature of wettest quarter (\u00B0C)" = "bio_08",
"Mean temperature of driest quarter (\u00B0C)"  = "bio_09",
"Mean temperature of warmest quarter (\u00B0C)" =  "bio_10",
"Mean temperature of coldest quarter (\u00B0C)" = "bio_11",
"Annual precipitation (mm)" = "bio_12",
"Precipitation of wettest month (mm)"= "bio_13",
"Precipitation of driest month (mm)" = "bio_14",
"Precipitation seasonality (coefficient of variation) (%)" = "bio_15",
"Precipitation of wettest quarter (mm)" = "bio_16",
"Precipitation of driest quarter (mm)"  ="bio_17",
"Precipitation of warmest quarter (mm)" = "bio_18",
"Precipitation of coldest quarter (mm)" = "bio_19",
"elevation",
"slope",
"aspect" )
# the  degree C symbology causes some issues....
write_csv(exVals,file = "outputs/ecogeographicDescription.csv")
# generate boxplots -------------------------------------------------------
#remove features with only one sample
tbls <- data1
shortNames
names(exVals[8:29])
shortNames <- names(exVals[8:29])
fullNames <- names(exVals2)[6:27]
fullNames
exportNames <- c(bioNames$`Current title`[1:19], "elevation","slope","aspect")
exportNames
index <- 12
index <- 12
bioNames <- bioNames
data <- data1
# select row of interest
d1 <- bioNames[index, ]
d1
# select variable of interest
var <- d1$shortName
fullName <- d1$full_title
exportName <- d1$`Current title`
# filter the dataset
t3 <- data[,c("species", var)]
t3
names(t3) <- c("species", "value")
# assign a variable for the title
t3$tempvar <- fullName
# labels
labels <-c("L. virosa", "L. serriola","L. serriola & L. virosa")
#
t3 |>
group_by(species)|>
dplyr::summarise(mean = median(value))
# generate the plot
p1 <- ggplot(data =t3, aes(x = factor(species, levels = c( "Lvir","Lser", "Lser, Lvir" )),
y = value,
color = factor(species, levels = c( "Lvir","Lser", "Lser, Lvir" ))))  +
geom_boxplot()  +
ggplot2::coord_flip() +
ggplot2::xlab("") +
scale_x_discrete(label = labels)+
ggplot2::ylab("") +
scale_color_manual(values = c( "#619CFF", "#00BA38","#F8766D" ))  +
theme_gray()  +
theme(legend.position="none",
aspect.ratio=1/3)  +
# facet_grid(. ~ tempvar) +
theme(strip.background = element_rect(fill="#d1d9d8"),
strip.text = element_text(size=10, colour="black"))+
ggtitle(exportName)
p1
createBoxPlot <- function(index, bioNames,  data){
# select row of interest
d1 <- bioNames[index, ]
print(d1)
# select variable of interest
var <- d1$shortName
fullName <- d1$full_title
exportName <- d1$`Current title`
# filter the dataset
t3 <- data[,c("species", var)]
names(t3) <- c("species", "value")
# reassign data
# t3$Value <- unlist(t3$Value)
# assign a variable for the title
t3$tempvar <- fullName
# labels
labels <-c("L. virosa", "L. serriola","L. serriola & L. virosa")
#
t3 |>
group_by(species)|>
dplyr::summarise(mean = median(value))
# generate the plot
p1 <- ggplot(data =t3, aes(x = factor(species, levels = c( "Lvir","Lser", "Lser, Lvir" )),
y = value,
color = factor(species, levels = c( "Lvir","Lser", "Lser, Lvir" ))))  +
geom_boxplot()  +
ggplot2::coord_flip() +
ggplot2::xlab("") +
scale_x_discrete(label = labels)+
ggplot2::ylab("") +
scale_color_manual(values = c( "#619CFF", "#00BA38","#F8766D" ))  +
theme_gray()  +
theme(legend.position="none",
aspect.ratio=1/3)  +
# facet_grid(. ~ tempvar) +
theme(strip.background = element_rect(fill="#d1d9d8"),
strip.text = element_text(size=10, colour="black"))+
ggtitle(exportName)
# export the image
ggsave(filename = paste0("outputs/boxplots/", exportName, "_2024_refined.png"),
plot = p1,
units = "in", width = 6, height = 2)
}
# work for the 19 bio clim variables
purrr::map(.x = 1:19, .f = createBoxPlot,
bioNames =  bioNames,
data = data1)
names(data1)
index <- 19
bioNames <- bioNames
data <- data1
bioNames
# select row of interest
d1 <- bioNames[index, ]
print(d1)
# select variable of interest
var <- d1$shortName
fullName <- d1$full_title
exportName <- d1$`Current title`
# filter the dataset
t3 <- data[,c("species", var)]
names(t3) <- c("species", "value")
t3
var
View(data)
wc
plot(wc[[19]])
plot(wc[[5]])
names(wc[[5]])
names(wc[[12]])
plot(wc[[12]])
